<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

namespace DebuggerCLI
{
	public interface ICommandHandlerItem
	{
		string ShortName { get; }
		string Name { get; }
		string Description { get; }
		string Details { get; }
		void Execute(params string[] items);
	}
<#
for (int i = 0; i < 17; i++)
{
	Write("\tpublic class CommandHandlerItem");
	if (i > 0)
	{
		Write("<");
		for (int j = 0; j < i; j++)
		{
			if (j > 0)
			{
				Write (", ");
			}
			Write($"T{j + 1:00}");
		}
		Write(">");
	}
	WriteLine(" : ICommandHandlerItem");
	WriteLine("\t{");
	WriteLine("\t\tpublic string Details { get; private set; }");
	WriteLine("\t\tpublic string ShortName { get; }");
	WriteLine("\t\tpublic string Name { get; }");
	WriteLine("\t\tpublic string Description { get; }");
	Write("\t\tpublic Action");
	if (i > 0)
	{
		Write("<");
		for (int j = 0; j < i; j++)
		{
			if(j > 0)
			{
				Write (", ");
			}
			Write($"T{j + 1:00}");
		}
		Write(">");
	}
	WriteLine(" ExecutingAction { get; private set; }");
	Write("\t\tpublic CommandHandlerItem(string name, string description, Action");
	if (i > 0)
	{
		Write("<");
		for (int j = 0; j < i; j++)
		{
			if(j > 0)
			{
				Write (", ");
			}
			Write($"T{j + 1:00}");
		}
		Write(">");
	}
	WriteLine(" act)");
	WriteLine("\t\t{");
	WriteLine("\t\t\tthis.Details = String.Empty;");
	WriteLine("\t\t\tthis.ShortName = String.Empty;");
	WriteLine("\t\t\tthis.Name = name.ToLowerInvariant();");
	WriteLine("\t\t\tthis.Description = description;");
	WriteLine("\t\t\tthis.ExecutingAction = act;");
	WriteLine("\t\t}");
	Write("\t\tpublic CommandHandlerItem(string shortname, string name, string description, Action");
	if (i > 0)
	{
		Write("<");
		for (int j = 0; j < i; j++)
		{
			if(j > 0)
			{
				Write (", ");
			}
			Write($"T{j + 1:00}");
		}
		Write(">");
	}
	WriteLine(" act)");
	WriteLine("\t\t{");
	WriteLine("\t\t\tthis.ShortName = shortname.ToLowerInvariant();");
	WriteLine("\t\t\tthis.Name = name.ToLowerInvariant();");
	WriteLine("\t\t\tthis.Details = String.Empty;");
	WriteLine("\t\t\tthis.Description = description;");
	WriteLine("\t\t\tthis.ExecutingAction = act;");
	WriteLine("\t\t}");
	WriteLine("\t\tpublic void Execute(params string[] items)");
	WriteLine("\t\t{");
	Write("\t\t\tthis.ExecutingAction?.Invoke(");
	if (i > 0)
	{
		WriteLine("");
		for (int j = 0; j < i; j++)
		{
			if (j > 0)
			{
				WriteLine (",");
			}
			Write($"\t\t\t\titems.Length < {(j + 1),2} ? default(T{j + 1:00}) : (T{j + 1:00})Convert.ChangeType(items[{j,2}], Type.GetTypeCode(typeof(T{j + 1:00})))");
		}
		WriteLine("");
		Write("\t\t\t");
	}
	WriteLine(");");
	WriteLine("\t\t}");
	Write("\t\tpublic CommandHandlerItem");
	if (i > 0)
	{
		Write("<");
		for (int j = 0; j < i; j++)
		{
			if (j > 0)
			{
				Write (", ");
			}
			Write($"T{j + 1:00}");
		}
		Write(">");
	}
	WriteLine(" SetDetails(params string[] details) { this.Details = String.Join(\"\\n\", details); return this; }");
	WriteLine("\t}");
}
#>
}